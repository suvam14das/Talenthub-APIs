# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:   
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env: 
      JWT_SECRET: ${{ secrets.JWT_SECRET }}  
      DB_PATH: ${{ secrets.DB_PATH_TEST }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - run: |       
        npm install
        npm run test  

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Replacing JWT_SECRET
        run: 
          sed -i 's\#JWT_SECRET\${{ secrets.JWT_SECRET }}\g' Dockerfile 
      - name: Replacing DB_PATH
        run: 
          sed -i 's\#DB_PATH\${{ secrets.DB_PATH }}\g' Dockerfile   
      - name: Replacing SENDGRID_API_KEY
        run: 
          sed -i 's\#SENDGRID_API_KEY\${{ secrets.SENDGRID_API_KEY }}\g' Dockerfile
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build docker image and push to docker hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/talent-hub:latest
      
      - name: Build, Push and Release a Docker container to Heroku. 
        uses: gonuit/heroku-docker-deploy@v1.3.2 
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_directory: ./
          dockerfile_name: Dockerfile
          docker_options: "--no-cache"
          process_type: web    